#NOME DO BANCO
use estagio;

#CRIAÇÃO DE TABELAS

create table if not exists CURSOS (
	cur_id int not null,
    cur_nome varchar(255) not null,
    cur_quant_periodos int not null,
    primary key(cur_id)
);

create table if not exists DISCIPLINAS (
	dis_id int not null,
    dis_nome varchar(255) not null,
    dis_curso int,
    primary key(dis_id),
    foreign key(dis_curso) references CURSOS(cur_id)
);

create table if not exists ALUNO_PCD (
	alu_id int not null,
    alu_nome varchar(255) not null,
    alu_cpf char(11) not null,
    alu_sexo char(1) not null,
    alu_email varchar(255) not null,
    alu_telefone varchar(255) not null,
    alu_matricula char(11) not null,
    alu_deficiencias varchar(255),
    alu_curso int,
    alu_Periodo_Academico varchar(255) not null,
    alu_data_nascimento date not null,
    primary key(alu_id),
    foreign key(alu_curso) references CURSOS(cur_id)
);

create table if not exists MONITOR (
	mon_id int not null,
    mon_nome varchar(255) not null,
    mon_cpf char(11) not null,
    mon_sexo char(1) not null,
    mon_email varchar(255) not null,
    mon_telefone varchar(255) not null,
    mon_matricula char(11) not null,
    mon_curso int,
    mon_periodo_academico varchar(255) not null,
    mon_tipo enum('Monitor','Tutor') not null,
    mon_arquivos blob,
    mon_aluno_pcd int,
    primary key(mon_id),
    foreign key(mon_curso) references CURSOS(cur_id),
    foreign key(mon_aluno_pcd) references ALUNO_PCD(alu_id)
);

create table if not exists TUTOR (
	tut_id int not null,
    tut_nome varchar(255) not null,
    tut_cpf char(11) not null,
    tut_sexo char(1) not null,
    tut_email varchar(255) not null,
    tut_telefone varchar(255) not null,
    tut_matricula char(11) not null,
    tut_curso int,
    tut_periodo_academico varchar(255) not null,
    tut_tipo enum('Monitor','Tutor') not null,
    tut_arquivos blob,
    tut_aluno_pcd int,
    primary key(tut_id),
    foreign key(tut_curso) references CURSOS(cur_id),
    foreign key(tut_aluno_pcd) references ALUNO_PCD(alu_id)
);

create table if not exists ADMINISTRADOR (
	adm_id int not null,
    adm_nome varchar(255) not null,
    adm_cpf char(11) not null,
    adm_email varchar(255) not null,
    primary key(adm_id)
);

create table if not exists AVISOS (
	avi_id int not null,
    avi_titulo varchar(255) not null,
    avi_descricao varchar(255),
    avi_data datetime not null,
    avi_arquivos blob,
    avi_administrador int,
    primary key(avi_id),
    foreign key(avi_administrador) references ADMINISTRADOR(adm_id)
);

create table if not exists ACOMPANHAMENTO (
	aco_id int not null,
    aco_semestre char(6),
    aco_aluno_pcd int,
    aco_monitor int,
    aco_tutor int,
    primary key(aco_id),
    foreign key(aco_aluno_pcd) references ALUNO_PCD(alu_id),
    foreign key(aco_monitor) references MONITOR(mon_id),
    foreign key(aco_tutor) references TUTOR(tut_id)
);

create table if not exists INTERPRETE (
	int_id int not null,
    int_nome varchar(255) not null,
    int_cpf char(11) not null,
    int_sexo char(1) not null,
    int_email varchar(255) not null,
    int_telefone varchar(255) not null,
    int_acompanhamento int,
    primary key(int_id),
    foreign key(int_acompanhamento) references ACOMPANHAMENTO(aco_id)
);

create table if not exists ACOPANHAMENTO_DISCIPLINA (
	AsDis_id int not null,
    AsDis_disciplina int,
    AsDis_acompanhamento int,
    primary key(AsDis_id),
    foreign key(AsDis_disciplina) references DISCIPLINAS(dis_id),
    foreign key(AsDis_acompanhamento) references ACOMPANHAMENTO(aco_id)
);

create table if not exists INTERPRETACAO (
	AsInt_id int not null,
    AsInt_inicio date not null,
    AsInt_fim date,
    AsInt_interprete int,
    AsInt_acompanhamento int,
    primary key(AsInt_id),
    foreign key(AsInt_Interprete) references INTERPRETE(int_id),
    foreign key(AsInt_Acompanhamento) references ACOMPANHAMENTO(aco_id)
);

create table if not exists Monitoria (
	AsMon_id int not null,
    AsMon_inicio date not null,
    AsMon_fim date,
    AsMon_monitor int,
    AsMon_acompanhamento int,
    primary key(AsMon_id),
    foreign key(AsMon_monitor) references MONITOR(mon_id),
    foreign key(AsMon_acompanhamento) references ACOMPANHAMENTO(aco_id)
);

create table if not exists Tutoria (
	AsTut_id int not null,
    AsTut_inicio date not null,
    AsTut_fim date,
    AsTut_tutor int,
    AsTut_acompanhamento int,
    primary key(AsTut_id),
    foreign key(AsTut_tutor) references TUTOR(tut_id),
    foreign key(AsTut_acompanhamento) references ACOMPANHAMENTO(aco_id)
);

create table if not exists FEEDBACK (
	fee_id int not null,
    fee_titulo varchar(255) not null,
    fee_descrição varchar(255) not null,
    fee_data datetime not null,
    fee_remetente json,
    fee_acompanhamento int,
    primary key(fee_id),
    foreign key(fee_acompanhamento) references ACOMPANHAMENTO(aco_id)
);